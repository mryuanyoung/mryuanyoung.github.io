<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用hexo搭建博客</title>
    <link href="/2022/04/26/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/04/26/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://hexo.io/">Hexo</a>是一个比较定制化的博客框架，使用时先编写markdown文档，框架中的模板引擎把编写的md文件转换成对应的html&#x2F;css&#x2F;js，再搭配github pages，可以很容易地搭建一个可供外部访问的博客。</p><blockquote><p>我之前一直是用语雀来做记录，体验也很好，但在上面写的东西也就自己看看，一般写得都很凌乱、严谨性也不够强。因为某些事情，最近半年来越发感到自己不管是书面还是口头的表达能力都有退化的趋势，思维能力更是大幅下降，所以才想起来搭一个博客作为对外输出的窗口（虽然可能也不会有人看），希望对这个问题有所帮助吧。博客内容可能会包含但不限于计算机技术相关、电影&#x2F;小说的观后感&#x2F;读后感之类的。</p></blockquote><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><ol><li>安装： hexo是基于nodejs的（如果没有对应版本的环境需要先行配置）安装方式有两种</li></ol><ul><li>全局安装 <code>npm install -g hexo-cli</code></li><li>局部安装 <code>npm install hexo</code></li></ul><ol start="2"><li><p>初始化：先新建一个文件夹存放项目，然后使用命令 <code>npx hexo init</code> 初始化项目</p></li><li><p>编写：命令 <code>npx hexo new [layout] &quot;[blog name]&quot;</code> 不加layout参数会默认创建post类型，也就是一篇博客，新生成的md文件路径是 <code>/source/_posts/[blog name].md</code> ，然后就可以在本地编写了</p></li><li><p>预览：通过命令 <code>npx hexo server</code> 起一个本地服务器来查看最终效果</p></li><li><p>打包：<code>npx hexo generate</code> 会生成public文件夹，里面的内容就是网页的资源文件</p></li><li><p>部署：理论上可以自己手动部署在自己的服务器上，或者其他静态资源托管站，但更巧妙（省钱省事）的方式就是使用github pages来托管我们的静态网页，hexo也提供命令一键实现这一过程 <code>npx hexo deploy</code> 其经过的主要流程可以概括为:</p><ol><li>打包到 <code>public </code> 目录</li><li>创建 <code>.deploy_git</code> 目录，把 <code>public</code> 目录中的内容copy到该目录下，初始化git仓库，执行git add commit，最后push到配置的远端仓库中</li><li>github仓库上对应分支会触发page的构建，稍加等待就可以通过 <code>https://[username].github.io</code> 访问了</li></ol></li></ol><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><p>原始的hexo非常丑陋，推荐使用模板来搭建，这里我使用的是<a href="https://hexo.fluid-dev.com/docs/">material design风格的模板</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
