<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>一篇充满负能量的碎碎念</title>
    <link href="/2022/05/06/%E4%B8%80%E7%AF%87%E5%85%85%E6%BB%A1%E8%B4%9F%E8%83%BD%E9%87%8F%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    <url>/2022/05/06/%E4%B8%80%E7%AF%87%E5%85%85%E6%BB%A1%E8%B4%9F%E8%83%BD%E9%87%8F%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="老天爷，你下屌吧！操死我吧！"><a href="#老天爷，你下屌吧！操死我吧！" class="headerlink" title="老天爷，你下屌吧！操死我吧！"></a>老天爷，你下屌吧！操死我吧！</h1><p>近期算是忙完了所有事情，在去实习之前，得来了一段宝贵的可自由支配的时间。由于外部环境变化太快，不管是从互联网行业发展来看，还是从更高层面的宏观经济形式来看，都能难让人乐观起来。为了尽可能让未来的自己过得好一些，总不能太闲，该多学习提升自己，让我这个从各种意义上来看都更像是”社会打工人“的学生，在接受社会毒打之后还能爬起来继续生活。</p><p>虽然暂时还不知道学什么才能抵御风险，但强化自身的专业水平总是没错的，保证有个吃饭的家伙。虽然是所谓的“华五”、“科班本硕”，但我觉得自己的计算机基础素养一直都不够扎实。正好不知道这段时间该做什么，不如好好强化一下操作系统、计算机网络等基础知识吧。</p><h1 id="大学，就是在大大的校园里自学"><a href="#大学，就是在大大的校园里自学" class="headerlink" title="大学，就是在大大的校园里自学"></a>大学，就是在大大的校园里自学</h1><p>正好想起之前在各个平台都被追捧的我校<a href="https://www.bilibili.com/video/BV1Cm4y1d7Ur">计科的OS课</a>，就去B站大学找来学习。光看课程目录就让我倒吸一大口凉气，这真的是我理解的操作系统课程吗？真的太硬核了，硬着头皮看了几节课，全程以写代码的方式讲解深入到CPU流水线级别的并发处理过程。让我不禁怀疑当初自己的OS课到底学到了什么？也就是背了一些以及过时的实现机制、调度算法，现在还有个模糊的印象都算不错了。课程中还提到了前置课程<code>计算机系统基础</code>，我院也有类似的课程<code>计算系统基础</code>，虽然看名字只差了一个字，但从视频中只言片语的描述中我还是感受到了什么叫夏虫不可语冰，什么是差距。</p><p>虽然我明白，这肯定也是计科教学质量非常顶级的课程，不是每门课都很优秀。但从各种渠道获取的信息包括亲身感受而言，平均教学质量还是要高出我院不少的。所以很久以前就心有怨念，“如果当初去了计科，专业水平肯定比现在的我强不少吧”，虽然这也只是给自己的无能找的借口罢了。</p><p>除了对讲课水平、课程质量这些比较因教师而异的微观层面的不满以外，更大的怨念其实源于整体培养计划、课程安排这些宏观层面的问题。我可以接受没有好的教师资源，但我不能接受一个所谓的“华五”层次的学校，“全国前二”的学院，连本科生的培养方案都做不好。是的，大学确实需要主动学习，不像高中那样，老师会把知识灌给你。我不是天才，我没有那么强的天赋和自驱力，所以依旧需要一个领路人的角色，来告诉我<code>sir, this way</code>。</p><h1 id="我们走了一些弯路"><a href="#我们走了一些弯路" class="headerlink" title="我们走了一些弯路"></a>我们走了一些弯路</h1><p>由于受到了刺激，非常想要证明”这不是我的问题，都怪学院“，我找到了计科和我院的师资、培养方案想做个全方位的对比。师资方面没什么好说的，计科的大几十个教授、副教授、专职科研人员对我院形成了碾压之势，从课程安排的角度来说，广度和深度都有很大的可操作空间。而不像我院，能开什么课程取决于老师“懂”什么。又说到上面的问题，我可以不关心课程质量本身，但需要告诉我什么阶段该学什么，不然我上大学的意义是什么呢？</p><p>这里暂时不论计科的课程安排如何，看到我院最新版的培养方案，心里升起了多种阴暗情绪，嫉妒现在的新生可以通过正常的路径踏入计算机的世界，怨恨当年“改革”培养方案的学院领导，以及作为实验小白鼠的那种被时代车轮碾压的悲凉。</p><p>当年的培养方案如下（专业相关课程）：</p><table><thead><tr><th align="center">学期</th><th align="center">1-1</th><th align="center">1-2</th><th align="center">2-1</th><th align="center">2-2</th><th align="center">3-1</th><th align="center">3-2</th><th align="center">4-1</th><th align="center">4-2</th></tr></thead><tbody><tr><td align="center">必修课</td><td align="center">离散<br>计基</td><td align="center">软工I</td><td align="center">计组<br>数据结构</td><td align="center">软工II<br>计网<br>数据科学基础</td><td align="center">操作系统<br>C++<br>软件系统设计<br>数据库</td><td align="center">商业模式<br>软工III</td><td align="center">人机交互<br>软件质量管理<br>方向实践</td><td align="center">毕设</td></tr></tbody></table><p>现在的培养方案如下（专业相关课程）：</p><table><thead><tr><th align="center">学期</th><th align="center">1-1</th><th align="center">1-2</th><th align="center">2-1</th><th align="center">2-2</th><th align="center">3-1</th><th align="center">3-2</th><th align="center">4-1</th><th align="center">4-2</th></tr></thead><tbody><tr><td align="center">必修课</td><td align="center">C程序设计<br>计基</td><td align="center">软工I<br>离散</td><td align="center">计组<br>数据结构<br>C++<br>计网</td><td align="center">软工II<br>操作系统<br>数据库<br>编译原理</td><td align="center">商业模式<br>人机交互</td><td align="center">软件系统设计<br>软工III<br>软件质量管理</td><td align="center">不安排必修</td><td align="center">毕设</td></tr></tbody></table><ul><li>总体的调整方向就是把一些原来在大三上学期的课程调整到大二学年，大四上学期不安排必修课</li><li>增加C程序设计课程，数据科学基础变为选修课，编译原理变为必修课</li><li>方向选修课程数量从13减少到11<ul><li>4（第一方向）+ 2（二三方向）+ 2（二三方向）+ 5（任选）&#x3D; 13门课</li><li>3（第一方向） + 3（第二方向） + 5（任选） &#x3D; 11门课</li></ul></li><li>大四上学期安排实习</li></ul><p>这样的培养方案不能说全完合理，但至少相比当初大一大二闲得要死，大三大四忙得要死的状态合理不知道多少倍。更重要的是，在学生涉低年级涉世未深的小白阶段，让他们有精力去打好计算机基础，培养对这个学科的兴趣，了解更广阔的计算机领域。</p><h1 id="潮水褪去之后，就知道谁在裸泳"><a href="#潮水褪去之后，就知道谁在裸泳" class="headerlink" title="潮水褪去之后，就知道谁在裸泳"></a>潮水褪去之后，就知道谁在裸泳</h1><p>作为一个“华五”层次的学校，对学生的培养不应该是市场导向的。今天互联网行业火热不代表明天依旧，当蓝海变成红海，该怎么向学生交代呢。</p><p>“就业率全校第一”、“平均薪资全校第一”这不能证明是学院培养得好，很大概率是因为行业、因为历史的进程。</p><p>“把自己卖个好价钱”这种想法学生可以有，但不应该是老师口中宣扬的价值观。</p><p>如今，属于互联网的”好时代“已经不复存在，各大厂争相裁员，公司也不会因为应届生的小白身份让你延迟”毕业“。在刚上大学时候脑中偶尔闪过的想法：“如果这个世界上没有计算了，我还能干什么”。潮水终究是会褪去的，我也应该正确认识到自己太“勤奋”，缺少行动力的缺点，少胡思乱想，多脚踏实地，也许，好日子真在后头呢。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用hexo搭建博客</title>
    <link href="/2022/04/26/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/04/26/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://hexo.io/">Hexo</a>是一个比较定制化的博客框架，使用时先编写markdown文档，框架中的模板引擎把编写的md文件转换成对应的html&#x2F;css&#x2F;js，再搭配github pages，可以很容易地搭建一个可供外部访问的博客。</p><blockquote><p>我之前一直是用语雀来做记录，体验也很好，但在上面写的东西也就自己看看，一般写得都很凌乱、严谨性也不够强。因为某些事情，最近半年来越发感到自己不管是书面还是口头的表达能力都有退化的趋势，思维能力更是大幅下降，所以才想起来搭一个博客作为对外输出的窗口（虽然可能也不会有人看），希望对这个问题有所帮助吧。博客内容可能会包含但不限于计算机技术相关、电影&#x2F;小说的观后感&#x2F;读后感之类的。</p></blockquote><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><ol><li>安装： hexo是基于nodejs的（如果没有对应版本的环境需要先行配置）安装方式有两种</li></ol><ul><li>全局安装 <code>npm install -g hexo-cli</code></li><li>局部安装 <code>npm install hexo</code></li></ul><ol start="2"><li><p>初始化：先新建一个文件夹存放项目，然后使用命令 <code>npx hexo init</code> 初始化项目</p></li><li><p>编写：命令 <code>npx hexo new [layout] &quot;[blog name]&quot;</code> 不加layout参数会默认创建post类型，也就是一篇博客，新生成的md文件路径是 <code>/source/_posts/[blog name].md</code> ，然后就可以在本地编写了</p></li><li><p>预览：通过命令 <code>npx hexo server</code> 起一个本地服务器来查看最终效果</p></li><li><p>打包：<code>npx hexo generate</code> 会生成public文件夹，里面的内容就是网页的资源文件</p></li><li><p>部署：理论上可以自己手动部署在自己的服务器上，或者其他静态资源托管站，但更巧妙（省钱省事）的方式就是使用github pages来托管我们的静态网页，hexo也提供命令一键实现这一过程 <code>npx hexo deploy</code> 其经过的主要流程可以概括为:</p><ol><li>打包到 <code>public </code> 目录</li><li>创建 <code>.deploy_git</code> 目录，把 <code>public</code> 目录中的内容copy到该目录下，初始化git仓库，执行git add commit，最后push到配置的远端仓库中</li><li>github仓库上对应分支会触发page的构建，稍加等待就可以通过 <code>https://[username].github.io</code> 访问了</li></ol></li></ol><h1 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h1><p>原始的hexo非常丑陋，推荐使用模板来搭建，这里我使用的是<a href="https://hexo.fluid-dev.com/docs/">material design风格的模板</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
